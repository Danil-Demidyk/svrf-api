#usda 1.0
(
    endTimeCode = 0
    startTimeCode = 0
)

def Scope "Materials"
{
    def Material "pbrmaterial_0"
    {
        token outputs:displacement.connect = </Materials/pbrmaterial_0/pbrMat1.outputs:displacement>
        token outputs:surface.connect = </Materials/pbrmaterial_0/pbrMat1.outputs:surface>

        def Shader "pbrMat1"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.6038274, 0.6038274, 0.6038274)
            float inputs:metallic = 0
            float inputs:opacity = 1
            bool inputs:useSpecularWorkflow = 0
            token outputs:displacement
            token outputs:surface
        }

        def Shader "primvar_st0"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            float2 inputs:fallback = (0, 0)
            token inputs:varname = "st0"
            float2 outputs:result
        }

        def Shader "primvar_st1"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            float2 inputs:fallback = (0, 0)
            token inputs:varname = "st1"
            float2 outputs:result
        }
    }
}

def Xform "root"
{
    float3 xformOp:scale = (100, 100, 100)
    uniform token[] xformOpOrder = ["xformOp:scale"]

    def Xform "AnimatedMorphCube"
    {
        matrix4d xformOp:transform = ( (-100, 0, -0, 0), (0, -0.000011920928955078125, -99.99999237060547, 0), (0, -99.99999237060547, 0.000017881393432617188, 0), (0, 0, 0, 1) )
        uniform token[] xformOpOrder = ["xformOp:transform"]

        def SkelRoot "skeleton_root"
        {
            def Mesh "mesh_primitive0" (
                prepend apiSchemas = ["BindingAPI"]
            )
            {
                float3[] extent = [(-0.010000004, -0.010000005, -0.01), (0.0100000035, 0.0100000035, 0.01)]
                int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
                int[] faceVertexIndices = [2, 1, 0, 3, 2, 0, 6, 5, 4, 7, 6, 4, 10, 9, 8, 11, 10, 8, 14, 13, 12, 15, 14, 12, 18, 17, 16, 19, 18, 16, 22, 21, 20, 23, 22, 20]
                rel material:binding = </Materials/pbrmaterial_0>
                normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (-1, 0, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (0, -1, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (1, 0, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0), (0, 1, -0)]
                point3f[] points = [(-0.01, 0.009999999, 0.01), (0.009999996, 0.0100000035, 0.01), (0.010000001, -0.009999998, 0.01), (-0.01, -0.01, 0.01), (-0.010000004, 0.009999994, -0.01), (-0.009999993, -0.010000005, -0.01), (0.0100000035, -0.009999996, -0.01), (0.009999999, 0.01, -0.01), (-0.01, 0.009999999, 0.01), (-0.01, -0.01, 0.01), (-0.009999993, -0.010000005, -0.01), (-0.010000004, 0.009999994, -0.01), (-0.01, -0.01, 0.01), (0.010000001, -0.009999998, 0.01), (0.0100000035, -0.009999996, -0.01), (-0.009999993, -0.010000005, -0.01), (0.010000001, -0.009999998, 0.01), (0.009999996, 0.0100000035, 0.01), (0.009999999, 0.01, -0.01), (0.0100000035, -0.009999996, -0.01), (-0.010000004, 0.009999994, -0.01), (0.009999999, 0.01, -0.01), (0.009999996, 0.0100000035, 0.01), (-0.01, 0.009999999, 0.01)]
                prepend rel skel:animationSource = </root/AnimatedMorphCube/skeleton_root/skel/anim>
                uniform token[] skel:blendShapes = ["thin", "angle"]
                prepend rel skel:blendShapeTargets = [
                    </root/AnimatedMorphCube/skeleton_root/mesh_primitive0/thin>,
                    </root/AnimatedMorphCube/skeleton_root/mesh_primitive0/angle>,
                ]
                prepend rel skel:skeleton = </root/AnimatedMorphCube/skeleton_root/skel>
                uniform token subdivisionScheme = "none"

                def BlendShape "thin"
                {
                    uniform vector3f[] offsets = [(0, 0, -0), (0, 0, -0), (0, 0.01893253, -0), (0, 0.01893253, -0), (0, 0, -0), (0, 0.018932529, -0), (0, 0.01893253, -0), (0, 0, -0), (0, 0, -0), (0, 0.01893253, -0), (0, 0.018932529, -0), (0, 0, -0), (0, 0.01893253, -0), (0, 0.01893253, -0), (0, 0.01893253, -0), (0, 0.018932529, -0), (0, 0.01893253, -0), (0, 0, -0), (0, 0, -0), (0, 0.01893253, -0), (0, 0, -0), (0, 0, -0), (0, 0, -0), (0, 0, -0)]
                }

                def BlendShape "angle"
                {
                    uniform vector3f[] offsets = [(0, 0, -0), (0, 0, -0), (0, 0, -0), (0, 0, -0), (0, 0, -0), (0, 0.019890836, -0), (0, 0.019890836, -0), (0, 0, -0), (0, 0, -0), (0, 0, -0), (0, 0.019890836, -0), (0, 0, -0), (0, 0, -0), (0, 0, -0), (0, 0.019890836, -0), (0, 0.019890836, -0), (0, 0, -0), (0, 0, -0), (0, 0, -0), (0, 0.019890836, -0), (0, 0, -0), (0, 0, -0), (0, 0, -0), (0, 0, -0)]
                }
            }

            def Skeleton "skel"
            {
                def SkelAnimation "anim"
                {
                    uniform token[] blendShapes = ["thin", "angle"]
                    float[] blendShapeWeights = [0, 0]
                    float[] blendShapeWeights.timeSamples = {
                        0: [0, 0],
                        1: [0.00128, 0],
                        2: [0.01123, 0],
                        3: [0.01968, 0],
                        4: [0.03029, 0],
                        5: [0.04297, 0],
                        6: [0.07407, 0],
                        7: [0.09229, 0],
                        8: [0.11212, 0],
                        9: [0.13348, 0],
                        10: [0.18032, 0],
                        11: [0.20558, 0],
                        12: [0.23193, 0],
                        13: [0.25926, 0],
                        14: [0.31641, 0],
                        15: [0.34601, 0],
                        16: [0.37616, 0],
                        17: [0.40674, 0],
                        18: [0.46877, 0],
                        19: [0.5, 0],
                        20: [0.53123, 0],
                        21: [0.56236, 0],
                        22: [0.62384, 0],
                        23: [0.65399, 0],
                        24: [0.68359, 0],
                        25: [0.71255, 0],
                        26: [0.76807, 0],
                        27: [0.79442, 0],
                        28: [0.81968, 0],
                        29: [0.84375, 0],
                        30: [0.88788, 0],
                        31: [0.90771, 0],
                        32: [0.92593, 0],
                        33: [0.9424, 0],
                        34: [0.96971, 0],
                        35: [0.98032, 0],
                        36: [0.98877, 0],
                        37: [0.99494, 0],
                        38: [1, 0],
                        39: [0.99821, 0.00179],
                        40: [0.99299, 0.00701],
                        41: [0.98459, 0.01541],
                        42: [0.95921, 0.04079],
                        43: [0.94271, 0.05729],
                        44: [0.92399, 0.07601],
                        45: [0.90329, 0.09671],
                        46: [0.85693, 0.14307],
                        47: [0.83175, 0.16825],
                        48: [0.80556, 0.19444],
                        49: [0.77859, 0.22141],
                        50: [0.72331, 0.27669],
                        51: [0.69547, 0.30453],
                        52: [0.66783, 0.33217],
                        53: [0.64063, 0.35937],
                        54: [0.58848, 0.41152],
                        55: [0.56402, 0.43598],
                        56: [0.54096, 0.45904],
                        57: [0.51954, 0.48046],
                        58: [0.48107, 0.51893],
                        59: [0.46137, 0.53863],
                        60: [0.441, 0.559],
                        61: [0.42007, 0.57993],
                        62: [0.37689, 0.62311],
                        63: [0.35484, 0.64516],
                        64: [0.33263, 0.66737],
                        65: [0.31033, 0.68967],
                        66: [0.26592, 0.73408],
                        67: [0.244, 0.756],
                        68: [0.2224, 0.7776],
                        69: [0.20122, 0.79878],
                        70: [0.16051, 0.83949],
                        71: [0.14118, 0.85882],
                        72: [0.12267, 0.87733],
                        73: [0.10507, 0.89493],
                        74: [0.073, 0.927],
                        75: [0.05873, 0.94127],
                        76: [0.04577, 0.95423],
                        77: [0.03422, 0.96578],
                        78: [0.01574, 0.98426],
                        79: [0.009, 0.991],
                        80: [0.00407, 0.99593],
                        81: [0.00103, 0.99897],
                        82: [0, 0.99494],
                        83: [0, 0.98033],
                        84: [0, 0.95703],
                        85: [0, 0.92593],
                        86: [0, 0.84375],
                        87: [0, 0.79442],
                        88: [0, 0.74074],
                        89: [0, 0.6836],
                        90: [0, 0.56236],
                        91: [0, 0.5],
                        92: [0, 0.43765],
                        93: [0, 0.37616],
                        94: [0, 0.25926],
                        95: [0, 0.20559],
                        96: [0, 0.15625],
                        97: [0, 0.11213],
                        98: [0, 0.04297],
                        99: [0, 0.01968],
                        100: [0, 0.00506],
                        101: [0, 0],
                    }
                }
            }
        }
    }
}

